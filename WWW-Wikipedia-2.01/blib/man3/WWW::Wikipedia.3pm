.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WWW::Wikipedia 3pm"
.TH WWW::Wikipedia 3pm "2013-02-21" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Wikipedia \- Automated interface to the Wikipedia
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use WWW::Wikipedia;
\&  my $wiki = WWW::Wikipedia\->new();
\&
\&  ## search for \*(Aqperl\*(Aq 
\&  my $result = $wiki\->search( \*(Aqperl\*(Aq );
\&
\&  ## if the entry has some text print it out
\&  if ( $result\->text() ) { 
\&      print $result\->text();
\&  }
\&
\&  ## list any related items we can look up 
\&  print join( "\en", $result\->related() );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
WWW::Wikipedia provides an automated interface to the Wikipedia 
<http://www.wikipedia.org>, which is a free, collaborative, online 
encyclopedia. This module allows you to search for a topic and return the 
resulting entry. It also gives you access to related topics which are also 
available via the Wikipedia for that entry.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
To install this module type the following:
.PP
.Vb 4
\&    perl Makefile.PL
\&    make
\&    make test
\&    make install
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "\fInew()\fP"
.IX Subsection "new()"
The constructor. You can pass it a two letter language code, or nothing
to let it default to 'en'.
.PP
.Vb 2
\&    ## Default: English
\&    my $wiki = WWW::Wikipedia\->new();
\&
\&    ## use the French wiki instead
\&    my $wiki = WWW::Wikipedia\->new( language => \*(Aqfr\*(Aq );
.Ve
.PP
WWW::Wikipedia is a subclass of LWP::UserAgent. If you would
like to have more control over the user agent (control timeouts, proxies ...) 
you have full access.
.PP
.Vb 3
\&    ## set HTTP request timeout
\&    my $wiki = WWW::Wikipedia\->new();
\&    $wiki\->timeout( 2 );
.Ve
.PP
You can turn off the following of wikipedia redirect directives by passing
a false value to \f(CW\*(C`follow_redirects\*(C'\fR.
.SS "\fIlanguage()\fP"
.IX Subsection "language()"
This allows you to get and set the language you want to use. Two letter
language codes should be used. The default is 'en'.
.PP
.Vb 1
\&    my $wiki = WWW::Wikipedia\->new( language => \*(Aqes\*(Aq );
\&    
\&    # Later on...
\&    $wiki\->language( \*(Aqfr\*(Aq );
.Ve
.SS "\fIfollow_redirects()\fP"
.IX Subsection "follow_redirects()"
By default, wikipeda redirect directives are followed. Set this to false to
turn that off.
.SS "\fIsearch()\fP"
.IX Subsection "search()"
Which performs the search and returns a WWW::Wikipedia::Entry object which 
you can query further. See WWW::Wikipedia::Entry docs for more info.
.PP
.Vb 2
\&    $entry = $wiki\->search( \*(AqPerl\*(Aq );
\&    print $entry\->text();
.Ve
.PP
If there's a problem connecting to Wikipedia, \f(CW\*(C`undef\*(C'\fR will be returned and the
error message will be stored in \f(CW\*(C`error()\*(C'\fR.
.SS "\fIrandom()\fP"
.IX Subsection "random()"
This method fetches a random wikipedia page.
.SS "\fIerror()\fP"
.IX Subsection "error()"
This is a generic error accessor/mutator. You can retrieve any searching error
messages here.
.SH "TODO"
.IX Header "TODO"
.IP "\(bu" 4
Clean up results. Strip \s-1HTML.\s0
.IP "\(bu" 4
Watch the development of Special:Export \s-1XML\s0 formatting, eg: http://en.wikipedia.org/wiki/Special:Export/perl
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
LWP::UserAgent
.SH "AUTHORS"
.IX Header "AUTHORS"
Ed Summers <ehs@pobox.com>
.PP
Brian Cassidy <bricas@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2003\-2013 by Ed Summers
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
